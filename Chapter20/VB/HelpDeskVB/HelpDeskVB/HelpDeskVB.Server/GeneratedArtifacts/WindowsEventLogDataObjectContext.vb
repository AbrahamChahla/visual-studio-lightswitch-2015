
'------------------------------------------------------------------------------
' <auto-generated>
'    This code was generated from a template.
'
'    Manual changes to this file may cause unexpected behavior in your application.
'    Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.ComponentModel
Imports System.Data.EntityClient
Imports System.Data.Objects
Imports System.Data.Objects.DataClasses
Imports System.Linq
Imports System.Runtime.Serialization
Imports System.Xml.Serialization


<Assembly: EdmSchemaAttribute("769a6615-ee3f-4c92-aafb-32b927df7b13")>
#Region "EDM Relationship Metadata"
<Assembly: EdmRelationshipAttribute("LightSwitchApplication", "EventLog_EventEntry", "LogSource", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(LightSwitchApplication.Implementation.LogSource), "LogEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(LightSwitchApplication.Implementation.LogEntry), True)>

#End Region

Namespace LightSwitchApplication.Implementation

    #Region "Contexts"
    
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public Partial Class WindowsEventLogData
        Inherits ObjectContext
    
        #Region "Constructors"
    
        ''' <summary>
        ''' Initializes a new WindowsEventLogData object using the connection string found in the 'WindowsEventLogData' section of the application configuration file.
        ''' </summary>
        Public Sub New()
            MyBase.New("name=WindowsEventLogData", "WindowsEventLogData")
            OnContextCreated()
        End Sub
    
        ''' <summary>
        ''' Initialize a new WindowsEventLogData object.
        ''' </summary>
        Public Sub New(ByVal connectionString As String)
            MyBase.New(connectionString, "WindowsEventLogData")
            OnContextCreated()
        End Sub
    
        ''' <summary>
        ''' Initialize a new WindowsEventLogData object.
        ''' </summary>
        Public Sub New(ByVal connection As EntityConnection)
            MyBase.New(connection, "WindowsEventLogData")
            OnContextCreated()
        End Sub
    
        #End Region
    
        #Region "Partial Methods"
    
        Partial Private Sub OnContextCreated()
        End Sub
    
        #End Region
    
        #Region "ObjectSet Properties"
    
        ''' <summary>
        ''' No Metadata Documentation available.
        ''' </summary>
        Public ReadOnly Property LogEntries() As ObjectSet(Of LogEntry)
            Get
                If (_LogEntries Is Nothing) Then
                    _LogEntries = MyBase.CreateObjectSet(Of LogEntry)("LogEntries")
                End If
                Return _LogEntries
            End Get
        End Property
    
        Private _LogEntries As ObjectSet(Of LogEntry)
    
        ''' <summary>
        ''' No Metadata Documentation available.
        ''' </summary>
        Public ReadOnly Property LogSources() As ObjectSet(Of LogSource)
            Get
                If (_LogSources Is Nothing) Then
                    _LogSources = MyBase.CreateObjectSet(Of LogSource)("LogSources")
                End If
                Return _LogSources
            End Get
        End Property
    
        Private _LogSources As ObjectSet(Of LogSource)

        #End Region

        #Region "AddTo Methods"
    
        ''' <summary>
        ''' Deprecated Method for adding a new object to the LogEntries EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
        ''' </summary>
        Public Sub AddToLogEntries(ByVal logEntry As LogEntry)
            MyBase.AddObject("LogEntries", logEntry)
        End Sub
    
        ''' <summary>
        ''' Deprecated Method for adding a new object to the LogSources EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
        ''' </summary>
        Public Sub AddToLogSources(ByVal logSource As LogSource)
            MyBase.AddObject("LogSources", logSource)
        End Sub

        #End Region

    End Class

    #End Region

    #Region "Entities"
    
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmEntityTypeAttribute(NamespaceName:="LightSwitchApplication", Name:="LogEntry")>
    <Serializable()>
    <DataContractAttribute(IsReference:=True)>
    Public Partial Class LogEntry
        Inherits EntityObject
        #Region "Factory Method"
    
        ''' <summary>
        ''' Create a new LogEntry object.
        ''' </summary>
        ''' <param name="logEntryID">Initial value of the LogEntryID property.</param>
        ''' <param name="message">Initial value of the Message property.</param>
        ''' <param name="eventDateTime">Initial value of the EventDateTime property.</param>
        Public Shared Function CreateLogEntry(logEntryID As Global.System.Int32, message As Global.System.String, eventDateTime As Global.System.DateTime) As LogEntry
            Dim logEntry as LogEntry = New LogEntry
            logEntry.LogEntryID = logEntryID
            logEntry.Message = message
            logEntry.EventDateTime = eventDateTime
            Return logEntry
        End Function

        #End Region

        #Region "Primitive Properties"
    
        ''' <summary>
        ''' No Metadata Documentation available.
        ''' </summary>
        <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
        <DataMemberAttribute()>
        Public Property LogEntryID() As Global.System.Int32
            Get
                Return _LogEntryID
            End Get
            Set
                If (_LogEntryID <> Value) Then
                    OnLogEntryIDChanging(value)
                    ReportPropertyChanging("LogEntryID")
                    _LogEntryID = value
                    ReportPropertyChanged("LogEntryID")
                    OnLogEntryIDChanged()
                End If
            End Set
        End Property
    
        Private _LogEntryID As Global.System.Int32
        Private Partial Sub OnLogEntryIDChanging(value As Global.System.Int32)
        End Sub
    
        Private Partial Sub OnLogEntryIDChanged()
        End Sub
    
        ''' <summary>
        ''' No Metadata Documentation available.
        ''' </summary>
        <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
        <DataMemberAttribute()>
        Public Property Message() As Global.System.String
            Get
                Return _Message
            End Get
            Set
                OnMessageChanging(value)
                ReportPropertyChanging("Message")
                _Message = value
                ReportPropertyChanged("Message")
                OnMessageChanged()
            End Set
        End Property
    
        Private _Message As Global.System.String
        Private Partial Sub OnMessageChanging(value As Global.System.String)
        End Sub
    
        Private Partial Sub OnMessageChanged()
        End Sub
    
        ''' <summary>
        ''' No Metadata Documentation available.
        ''' </summary>
        <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
        <DataMemberAttribute()>
        Public Property EventDateTime() As Global.System.DateTime
            Get
                Return _EventDateTime
            End Get
            Set
                OnEventDateTimeChanging(value)
                ReportPropertyChanging("EventDateTime")
                _EventDateTime = value
                ReportPropertyChanged("EventDateTime")
                OnEventDateTimeChanged()
            End Set
        End Property
    
        Private _EventDateTime As Global.System.DateTime
        Private Partial Sub OnEventDateTimeChanging(value As Global.System.DateTime)
        End Sub
    
        Private Partial Sub OnEventDateTimeChanged()
        End Sub
    
        ''' <summary>
        ''' No Metadata Documentation available.
        ''' </summary>
        <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
        <DataMemberAttribute()>
        Public Property SourceName() As Global.System.String
            Get
                Return _SourceName
            End Get
            Set
                OnSourceNameChanging(value)
                ReportPropertyChanging("SourceName")
                _SourceName = value
                ReportPropertyChanged("SourceName")
                OnSourceNameChanged()
            End Set
        End Property
    
        Private _SourceName As Global.System.String
        Private Partial Sub OnSourceNameChanging(value As Global.System.String)
        End Sub
    
        Private Partial Sub OnSourceNameChanged()
        End Sub

        #End Region

        #Region "Navigation Properties"
    
        ''' <summary>
        ''' No Metadata Documentation available.
        ''' </summary>
        <XmlIgnoreAttribute()>
        <SoapIgnoreAttribute()>
        <DataMemberAttribute()>
        <EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "EventLog_EventEntry", "LogSource")>
        Public Property EventSource() As LogSource
            Get
                Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of LogSource)("LightSwitchApplication.EventLog_EventEntry", "LogSource").Value
            End Get
            Set
                CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of LogSource)("LightSwitchApplication.EventLog_EventEntry", "LogSource").Value = value
            End Set
        End Property
        ''' <summary>
        ''' No Metadata Documentation available.
        ''' </summary>
        <BrowsableAttribute(False)>
        <DataMemberAttribute()>
        Public Property EventSourceReference() As EntityReference(Of LogSource)
            Get
                Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of LogSource)("LightSwitchApplication.EventLog_EventEntry", "LogSource")
            End Get
            Set
                If (Not value Is Nothing)
                    CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of LogSource)("LightSwitchApplication.EventLog_EventEntry", "LogSource", value)
                End If
            End Set
        End Property

        #End Region

    End Class
    
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmEntityTypeAttribute(NamespaceName:="LightSwitchApplication", Name:="LogSource")>
    <Serializable()>
    <DataContractAttribute(IsReference:=True)>
    Public Partial Class LogSource
        Inherits EntityObject
        #Region "Factory Method"
    
        ''' <summary>
        ''' Create a new LogSource object.
        ''' </summary>
        ''' <param name="sourceName">Initial value of the SourceName property.</param>
        Public Shared Function CreateLogSource(sourceName As Global.System.String) As LogSource
            Dim logSource as LogSource = New LogSource
            logSource.SourceName = sourceName
            Return logSource
        End Function

        #End Region

        #Region "Primitive Properties"
    
        ''' <summary>
        ''' No Metadata Documentation available.
        ''' </summary>
        <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
        <DataMemberAttribute()>
        Public Property SourceName() As Global.System.String
            Get
                Return _SourceName
            End Get
            Set
                If (Not Global.System.String.Equals(_SourceName, Value, Global.System.StringComparison.Ordinal)) Then
                    OnSourceNameChanging(value)
                    ReportPropertyChanging("SourceName")
                    _SourceName = value
                    ReportPropertyChanged("SourceName")
                    OnSourceNameChanged()
                End If
            End Set
        End Property
    
        Private _SourceName As Global.System.String
        Private Partial Sub OnSourceNameChanging(value As Global.System.String)
        End Sub
    
        Private Partial Sub OnSourceNameChanged()
        End Sub

        #End Region

        #Region "Navigation Properties"
    
        ''' <summary>
        ''' No Metadata Documentation available.
        ''' </summary>
        <XmlIgnoreAttribute()>
        <SoapIgnoreAttribute()>
        <DataMemberAttribute()>
        <EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "EventLog_EventEntry", "LogEntry")>
         Public Property EventEntries() As EntityCollection(Of LogEntry)
            Get
                Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of LogEntry)("LightSwitchApplication.EventLog_EventEntry", "LogEntry")
            End Get
            Set
                If (Not value Is Nothing)
                    CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of LogEntry)("LightSwitchApplication.EventLog_EventEntry", "LogEntry", value)
                End If
            End Set
        End Property

        #End Region

    End Class

    #End Region

    
End Namespace
