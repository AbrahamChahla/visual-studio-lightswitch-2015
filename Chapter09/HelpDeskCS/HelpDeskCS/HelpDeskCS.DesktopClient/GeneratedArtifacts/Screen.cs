//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class AddEditIssue
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private AddEditIssue(global::System.Nullable<int> IssueId) : base("LightSwitchApplication.HelpDeskCS.DesktopClient:AddEditIssue")
        {
                this.IssueId = IssueId;
            global::LightSwitchApplication.AddEditIssue.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static AddEditIssue CreateInstance(global::System.Nullable<int> IssueId)
        {
            return new global::LightSwitchApplication.AddEditIssue(
                        IssueId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Issue_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Loaded(bool succeeded);

        partial void IssueId_Changed();

        partial void IssueProperty_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Issue Issue
        {
            get
            {
                return global::LightSwitchApplication.AddEditIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.Issue);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IssueId
        {
            get 
            {
                return global::LightSwitchApplication.AddEditIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueId);
            }
            set
            {
                global::LightSwitchApplication.AddEditIssue.DetailsClass.SetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Issue IssueProperty
        {
            get 
            {
                return global::LightSwitchApplication.AddEditIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueProperty);
            }
            set
            {
                global::LightSwitchApplication.AddEditIssue.DetailsClass.SetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySet, global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSet, global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.Issue;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry
                __AddEditIssueEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry(
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeSavingEvent,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeSavedEvent,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeClosingEvent,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeCreated,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeActivated,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeSaveErrorEvent);
            private static void __AddEditIssue_InvokeInitializeDataWorkspace(global::LightSwitchApplication.AddEditIssue s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.AddEditIssue_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __AddEditIssue_InvokeSavingEvent(global::LightSwitchApplication.AddEditIssue s)
            {
                bool handled = false;
                s.AddEditIssue_Saving(ref handled);
                return handled;
            }
            private static void __AddEditIssue_InvokeSavedEvent(global::LightSwitchApplication.AddEditIssue s)
            {
                s.AddEditIssue_Saved();
            }
            private static bool __AddEditIssue_InvokeClosingEvent(global::LightSwitchApplication.AddEditIssue s)
            {
                bool cancel = false;
                s.AddEditIssue_Closing(ref cancel);
                return cancel;
            }
            private static void __AddEditIssue_InvokeCreated(global::LightSwitchApplication.AddEditIssue s)
            {
                s.AddEditIssue_Created();
            }
            private static void __AddEditIssue_InvokeActivated(global::LightSwitchApplication.AddEditIssue s)
            {
                s.AddEditIssue_Activated();
            }
            private static bool __AddEditIssue_InvokeSaveErrorEvent(global::LightSwitchApplication.AddEditIssue s, global::System.Exception ex)
            {
                bool handled = false;
                s.AddEditIssue_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issue;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>>.Data _IssueId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Data _IssueProperty;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue> Issue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.Issue);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>> IssueId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue> IssueProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueProperty);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issue",
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._Issue_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._Issue_Validate,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._Issue_CreateQuery,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._Issue_OnValueChanged,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._Issue_OnLoaded);
                private static void _Issue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._Issue, sf);
                }
                private static void _Issue_Validate(global::LightSwitchApplication.AddEditIssue s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issue_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issue_CreateQuery(global::LightSwitchApplication.AddEditIssue.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Issue_OnValueChanged(global::LightSwitchApplication.AddEditIssue s)
                {
                    s.Issue_Changed();
                }

                private static void _Issue_OnLoaded(global::LightSwitchApplication.AddEditIssue s, bool succeeded)
                {
                    s.Issue_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>>.Entry
                    IssueId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IssueId",
                        false,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueId_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueId_Validate,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueId_OnValueChanged);
                private static void _IssueId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueId, sf);
                }
                private static void _IssueId_Validate(global::LightSwitchApplication.AddEditIssue s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueId_Validate(r);
                }
                private static void _IssueId_OnValueChanged(global::LightSwitchApplication.AddEditIssue s)
                {
                    s.IssueId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    IssueProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "IssueProperty",
                        false,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueProperty_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueProperty_Validate,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueProperty_OnValueChanged);
                private static void _IssueProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueProperty, sf);
                }
                private static void _IssueProperty_Validate(global::LightSwitchApplication.AddEditIssue s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueProperty_Validate(r);
                }
                private static void _IssueProperty_OnValueChanged(global::LightSwitchApplication.AddEditIssue s)
                {
                    s.IssueProperty_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class CreateNewEngineer
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private CreateNewEngineer() : base("LightSwitchApplication.HelpDeskCS.DesktopClient:CreateNewEngineer")
        {
            global::LightSwitchApplication.CreateNewEngineer.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static CreateNewEngineer CreateInstance()
        {
            return new global::LightSwitchApplication.CreateNewEngineer(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewEngineer_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewEngineer_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewEngineer_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewEngineer_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewEngineer_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewEngineer_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewEngineer_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void EngineerProperty_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Engineer EngineerProperty
        {
            get 
            {
                return global::LightSwitchApplication.CreateNewEngineer.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewEngineer.DetailsClass.PropertySetProperties.EngineerProperty);
            }
            set
            {
                global::LightSwitchApplication.CreateNewEngineer.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateNewEngineer.DetailsClass.PropertySetProperties.EngineerProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass, global::LightSwitchApplication.CreateNewEngineer.DetailsClass.PropertySet, global::LightSwitchApplication.CreateNewEngineer.DetailsClass.CommandSet, global::LightSwitchApplication.CreateNewEngineer.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.CreateNewEngineer.DetailsClass.PropertySetProperties.EngineerProperty;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass>.Entry
                __CreateNewEngineerEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass>.Entry(
                    global::LightSwitchApplication.CreateNewEngineer.DetailsClass.__CreateNewEngineer_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.CreateNewEngineer.DetailsClass.__CreateNewEngineer_InvokeSavingEvent,
                    global::LightSwitchApplication.CreateNewEngineer.DetailsClass.__CreateNewEngineer_InvokeSavedEvent,
                    global::LightSwitchApplication.CreateNewEngineer.DetailsClass.__CreateNewEngineer_InvokeClosingEvent,
                    global::LightSwitchApplication.CreateNewEngineer.DetailsClass.__CreateNewEngineer_InvokeCreated,
                    global::LightSwitchApplication.CreateNewEngineer.DetailsClass.__CreateNewEngineer_InvokeActivated,
                    global::LightSwitchApplication.CreateNewEngineer.DetailsClass.__CreateNewEngineer_InvokeSaveErrorEvent);
            private static void __CreateNewEngineer_InvokeInitializeDataWorkspace(global::LightSwitchApplication.CreateNewEngineer s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.CreateNewEngineer_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __CreateNewEngineer_InvokeSavingEvent(global::LightSwitchApplication.CreateNewEngineer s)
            {
                bool handled = false;
                s.CreateNewEngineer_Saving(ref handled);
                return handled;
            }
            private static void __CreateNewEngineer_InvokeSavedEvent(global::LightSwitchApplication.CreateNewEngineer s)
            {
                s.CreateNewEngineer_Saved();
            }
            private static bool __CreateNewEngineer_InvokeClosingEvent(global::LightSwitchApplication.CreateNewEngineer s)
            {
                bool cancel = false;
                s.CreateNewEngineer_Closing(ref cancel);
                return cancel;
            }
            private static void __CreateNewEngineer_InvokeCreated(global::LightSwitchApplication.CreateNewEngineer s)
            {
                s.CreateNewEngineer_Created();
            }
            private static void __CreateNewEngineer_InvokeActivated(global::LightSwitchApplication.CreateNewEngineer s)
            {
                s.CreateNewEngineer_Activated();
            }
            private static bool __CreateNewEngineer_InvokeSaveErrorEvent(global::LightSwitchApplication.CreateNewEngineer s, global::System.Exception ex)
            {
                bool handled = false;
                s.CreateNewEngineer_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.CreateNewEngineer.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.CreateNewEngineer.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.CreateNewEngineer.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass, global::LightSwitchApplication.Engineer>.Data _EngineerProperty;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass, global::LightSwitchApplication.Engineer> EngineerProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.CreateNewEngineer.DetailsClass.PropertySetProperties.EngineerProperty);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    EngineerProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "EngineerProperty",
                        false,
                        global::LightSwitchApplication.CreateNewEngineer.DetailsClass.PropertySetProperties._EngineerProperty_Stub,
                        global::LightSwitchApplication.CreateNewEngineer.DetailsClass.PropertySetProperties._EngineerProperty_Validate,
                        global::LightSwitchApplication.CreateNewEngineer.DetailsClass.PropertySetProperties._EngineerProperty_OnValueChanged);
                private static void _EngineerProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewEngineer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.CreateNewEngineer.DetailsClass d, object sf)
                {
                    c(d, ref d._EngineerProperty, sf);
                }
                private static void _EngineerProperty_Validate(global::LightSwitchApplication.CreateNewEngineer s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EngineerProperty_Validate(r);
                }
                private static void _EngineerProperty_OnValueChanged(global::LightSwitchApplication.CreateNewEngineer s)
                {
                    s.EngineerProperty_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class CreateNewIssue
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private CreateNewIssue(global::System.Nullable<int> EngineerIDParam) : base("LightSwitchApplication.HelpDeskCS.DesktopClient:CreateNewIssue")
        {
                this.EngineerIDParam = EngineerIDParam;
            global::LightSwitchApplication.CreateNewIssue.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static CreateNewIssue CreateInstance(global::System.Nullable<int> EngineerIDParam)
        {
            return new global::LightSwitchApplication.CreateNewIssue(
                        EngineerIDParam
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssue_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssue_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssue_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssue_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssue_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssue_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssue_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void IssueProperty_Changed();

        partial void PriorityMedium_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriorityMedium_Loaded(bool succeeded);

        partial void EngineerIDParam_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Issue IssueProperty
        {
            get 
            {
                return global::LightSwitchApplication.CreateNewIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties.IssueProperty);
            }
            set
            {
                global::LightSwitchApplication.CreateNewIssue.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties.IssueProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Priority PriorityMedium
        {
            get
            {
                return global::LightSwitchApplication.CreateNewIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties.PriorityMedium);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriorityMedium_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> EngineerIDParam
        {
            get 
            {
                return global::LightSwitchApplication.CreateNewIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties.EngineerIDParam);
            }
            set
            {
                global::LightSwitchApplication.CreateNewIssue.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties.EngineerIDParam, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIDParam_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySet, global::LightSwitchApplication.CreateNewIssue.DetailsClass.CommandSet, global::LightSwitchApplication.CreateNewIssue.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties.IssueProperty;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass>.Entry
                __CreateNewIssueEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass>.Entry(
                    global::LightSwitchApplication.CreateNewIssue.DetailsClass.__CreateNewIssue_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.CreateNewIssue.DetailsClass.__CreateNewIssue_InvokeSavingEvent,
                    global::LightSwitchApplication.CreateNewIssue.DetailsClass.__CreateNewIssue_InvokeSavedEvent,
                    global::LightSwitchApplication.CreateNewIssue.DetailsClass.__CreateNewIssue_InvokeClosingEvent,
                    global::LightSwitchApplication.CreateNewIssue.DetailsClass.__CreateNewIssue_InvokeCreated,
                    global::LightSwitchApplication.CreateNewIssue.DetailsClass.__CreateNewIssue_InvokeActivated,
                    global::LightSwitchApplication.CreateNewIssue.DetailsClass.__CreateNewIssue_InvokeSaveErrorEvent);
            private static void __CreateNewIssue_InvokeInitializeDataWorkspace(global::LightSwitchApplication.CreateNewIssue s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.CreateNewIssue_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __CreateNewIssue_InvokeSavingEvent(global::LightSwitchApplication.CreateNewIssue s)
            {
                bool handled = false;
                s.CreateNewIssue_Saving(ref handled);
                return handled;
            }
            private static void __CreateNewIssue_InvokeSavedEvent(global::LightSwitchApplication.CreateNewIssue s)
            {
                s.CreateNewIssue_Saved();
            }
            private static bool __CreateNewIssue_InvokeClosingEvent(global::LightSwitchApplication.CreateNewIssue s)
            {
                bool cancel = false;
                s.CreateNewIssue_Closing(ref cancel);
                return cancel;
            }
            private static void __CreateNewIssue_InvokeCreated(global::LightSwitchApplication.CreateNewIssue s)
            {
                s.CreateNewIssue_Created();
            }
            private static void __CreateNewIssue_InvokeActivated(global::LightSwitchApplication.CreateNewIssue s)
            {
                s.CreateNewIssue_Activated();
            }
            private static bool __CreateNewIssue_InvokeSaveErrorEvent(global::LightSwitchApplication.CreateNewIssue s, global::System.Exception ex)
            {
                bool handled = false;
                s.CreateNewIssue_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.CreateNewIssue.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.CreateNewIssue.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::LightSwitchApplication.Issue>.Data _IssueProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::LightSwitchApplication.Priority>.Data _PriorityMedium;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::System.Nullable<int>>.Data _EngineerIDParam;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::LightSwitchApplication.Issue> IssueProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties.IssueProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::LightSwitchApplication.Priority> PriorityMedium
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::LightSwitchApplication.Priority>)base.GetItem(global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties.PriorityMedium);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::System.Nullable<int>> EngineerIDParam
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::System.Nullable<int>>)base.GetItem(global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties.EngineerIDParam);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    IssueProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "IssueProperty",
                        false,
                        global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties._IssueProperty_Stub,
                        global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties._IssueProperty_Validate,
                        global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties._IssueProperty_OnValueChanged);
                private static void _IssueProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.CreateNewIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueProperty, sf);
                }
                private static void _IssueProperty_Validate(global::LightSwitchApplication.CreateNewIssue s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueProperty_Validate(r);
                }
                private static void _IssueProperty_OnValueChanged(global::LightSwitchApplication.CreateNewIssue s)
                {
                    s.IssueProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::LightSwitchApplication.Priority>.Entry
                    PriorityMedium = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::LightSwitchApplication.Priority>.Entry(
                        "PriorityMedium",
                        global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties._PriorityMedium_Stub,
                        global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties._PriorityMedium_Validate,
                        global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties._PriorityMedium_CreateQuery,
                        global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties._PriorityMedium_OnValueChanged,
                        global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties._PriorityMedium_OnLoaded);
                private static void _PriorityMedium_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::LightSwitchApplication.Priority>.Data> c, global::LightSwitchApplication.CreateNewIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._PriorityMedium, sf);
                }
                private static void _PriorityMedium_Validate(global::LightSwitchApplication.CreateNewIssue s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.PriorityMedium_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _PriorityMedium_CreateQuery(global::LightSwitchApplication.CreateNewIssue.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _PriorityMedium_OnValueChanged(global::LightSwitchApplication.CreateNewIssue s)
                {
                    s.PriorityMedium_Changed();
                }

                private static void _PriorityMedium_OnLoaded(global::LightSwitchApplication.CreateNewIssue s, bool succeeded)
                {
                    s.PriorityMedium_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::System.Nullable<int>>.Entry
                    EngineerIDParam = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::System.Nullable<int>>.Entry(
                        "EngineerIDParam",
                        false,
                        global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties._EngineerIDParam_Stub,
                        global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties._EngineerIDParam_Validate,
                        global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties._EngineerIDParam_OnValueChanged);
                private static void _EngineerIDParam_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.CreateNewIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._EngineerIDParam, sf);
                }
                private static void _EngineerIDParam_Validate(global::LightSwitchApplication.CreateNewIssue s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EngineerIDParam_Validate(r);
                }
                private static void _EngineerIDParam_OnValueChanged(global::LightSwitchApplication.CreateNewIssue s)
                {
                    s.EngineerIDParam_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class CreateNewIssueResponse
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private CreateNewIssueResponse() : base("LightSwitchApplication.HelpDeskCS.DesktopClient:CreateNewIssueResponse")
        {
            global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static CreateNewIssueResponse CreateInstance()
        {
            return new global::LightSwitchApplication.CreateNewIssueResponse(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueResponse_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueResponse_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueResponse_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueResponse_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueResponse_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueResponse_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueResponse_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void IssueResponseProperty_Changed();

        partial void ResponseTextCount_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.IssueResponse IssueResponseProperty
        {
            get 
            {
                return global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.IssueResponseProperty);
            }
            set
            {
                global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.IssueResponseProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueResponseProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ResponseTextCount
        {
            get 
            {
                return global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.ResponseTextCount);
            }
            set
            {
                global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.ResponseTextCount, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ResponseTextCount_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySet, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.CommandSet, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.IssueResponseProperty;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass>.Entry
                __CreateNewIssueResponseEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass>.Entry(
                    global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.__CreateNewIssueResponse_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.__CreateNewIssueResponse_InvokeSavingEvent,
                    global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.__CreateNewIssueResponse_InvokeSavedEvent,
                    global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.__CreateNewIssueResponse_InvokeClosingEvent,
                    global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.__CreateNewIssueResponse_InvokeCreated,
                    global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.__CreateNewIssueResponse_InvokeActivated,
                    global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.__CreateNewIssueResponse_InvokeSaveErrorEvent);
            private static void __CreateNewIssueResponse_InvokeInitializeDataWorkspace(global::LightSwitchApplication.CreateNewIssueResponse s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.CreateNewIssueResponse_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __CreateNewIssueResponse_InvokeSavingEvent(global::LightSwitchApplication.CreateNewIssueResponse s)
            {
                bool handled = false;
                s.CreateNewIssueResponse_Saving(ref handled);
                return handled;
            }
            private static void __CreateNewIssueResponse_InvokeSavedEvent(global::LightSwitchApplication.CreateNewIssueResponse s)
            {
                s.CreateNewIssueResponse_Saved();
            }
            private static bool __CreateNewIssueResponse_InvokeClosingEvent(global::LightSwitchApplication.CreateNewIssueResponse s)
            {
                bool cancel = false;
                s.CreateNewIssueResponse_Closing(ref cancel);
                return cancel;
            }
            private static void __CreateNewIssueResponse_InvokeCreated(global::LightSwitchApplication.CreateNewIssueResponse s)
            {
                s.CreateNewIssueResponse_Created();
            }
            private static void __CreateNewIssueResponse_InvokeActivated(global::LightSwitchApplication.CreateNewIssueResponse s)
            {
                s.CreateNewIssueResponse_Activated();
            }
            private static bool __CreateNewIssueResponse_InvokeSaveErrorEvent(global::LightSwitchApplication.CreateNewIssueResponse s, global::System.Exception ex)
            {
                bool handled = false;
                s.CreateNewIssueResponse_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::LightSwitchApplication.IssueResponse>.Data _IssueResponseProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>>.Data _ResponseTextCount;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::LightSwitchApplication.IssueResponse> IssueResponseProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::LightSwitchApplication.IssueResponse>)base.GetItem(global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.IssueResponseProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>> ResponseTextCount
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>>)base.GetItem(global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.ResponseTextCount);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::LightSwitchApplication.IssueResponse>.Entry
                    IssueResponseProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::LightSwitchApplication.IssueResponse>.Entry(
                        "IssueResponseProperty",
                        false,
                        global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties._IssueResponseProperty_Stub,
                        global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties._IssueResponseProperty_Validate,
                        global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties._IssueResponseProperty_OnValueChanged);
                private static void _IssueResponseProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::LightSwitchApplication.IssueResponse>.Data> c, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueResponseProperty, sf);
                }
                private static void _IssueResponseProperty_Validate(global::LightSwitchApplication.CreateNewIssueResponse s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueResponseProperty_Validate(r);
                }
                private static void _IssueResponseProperty_OnValueChanged(global::LightSwitchApplication.CreateNewIssueResponse s)
                {
                    s.IssueResponseProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>>.Entry
                    ResponseTextCount = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ResponseTextCount",
                        false,
                        global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties._ResponseTextCount_Stub,
                        global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties._ResponseTextCount_Validate,
                        global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties._ResponseTextCount_OnValueChanged);
                private static void _ResponseTextCount_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass d, object sf)
                {
                    c(d, ref d._ResponseTextCount, sf);
                }
                private static void _ResponseTextCount_Validate(global::LightSwitchApplication.CreateNewIssueResponse s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ResponseTextCount_Validate(r);
                }
                private static void _ResponseTextCount_OnValueChanged(global::LightSwitchApplication.CreateNewIssueResponse s)
                {
                    s.ResponseTextCount_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class EditableEngineersGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EditableEngineersGrid() : base("LightSwitchApplication.HelpDeskCS.DesktopClient:EditableEngineersGrid")
        {
            global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EditableEngineersGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EditableEngineersGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableEngineersGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableEngineersGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableEngineersGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableEngineersGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableEngineersGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableEngineersGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableEngineersGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Engineers_SelectionChanged();

        partial void Engineers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Engineers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Engineer> Engineers
        {
            get
            {
                return global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.PropertySetProperties.Engineers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.PropertySetProperties.Engineers;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass>.Entry
                __EditableEngineersGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.__EditableEngineersGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.__EditableEngineersGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.__EditableEngineersGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.__EditableEngineersGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.__EditableEngineersGrid_InvokeCreated,
                    global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.__EditableEngineersGrid_InvokeActivated,
                    global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.__EditableEngineersGrid_InvokeSaveErrorEvent);
            private static void __EditableEngineersGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EditableEngineersGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EditableEngineersGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EditableEngineersGrid_InvokeSavingEvent(global::LightSwitchApplication.EditableEngineersGrid s)
            {
                bool handled = false;
                s.EditableEngineersGrid_Saving(ref handled);
                return handled;
            }
            private static void __EditableEngineersGrid_InvokeSavedEvent(global::LightSwitchApplication.EditableEngineersGrid s)
            {
                s.EditableEngineersGrid_Saved();
            }
            private static bool __EditableEngineersGrid_InvokeClosingEvent(global::LightSwitchApplication.EditableEngineersGrid s)
            {
                bool cancel = false;
                s.EditableEngineersGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EditableEngineersGrid_InvokeCreated(global::LightSwitchApplication.EditableEngineersGrid s)
            {
                s.EditableEngineersGrid_Created();
            }
            private static void __EditableEngineersGrid_InvokeActivated(global::LightSwitchApplication.EditableEngineersGrid s)
            {
                s.EditableEngineersGrid_Activated();
            }
            private static bool __EditableEngineersGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EditableEngineersGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EditableEngineersGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EngineersQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Engineers;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Engineers;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass, global::LightSwitchApplication.Engineer> Engineers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.PropertySetProperties.Engineers);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Engineers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Engineers",
                        global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.PropertySetProperties._Engineers_Stub,
                        global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.PropertySetProperties._Engineers_Validate,
                        global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.PropertySetProperties._Engineers_CreateQuery,
                        global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.PropertySetProperties._Engineers_SelectionChanged,
                        global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.PropertySetProperties._Engineers_OnCollectionChanged,
                        global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.PropertySetProperties._Engineers_OnLoaded);
                private static void _Engineers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableEngineersGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Engineers, sf);
                }
                private static void _Engineers_Validate(global::LightSwitchApplication.EditableEngineersGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Engineers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Engineers_CreateQuery(global::LightSwitchApplication.EditableEngineersGrid.DetailsClass d, object[] args)
                {
                    return d.EngineersQuery();
                }
                private static void _Engineers_SelectionChanged(global::LightSwitchApplication.EditableEngineersGrid s)
                {
                    s.Engineers_SelectionChanged();
                }
                private static void _Engineers_OnCollectionChanged(global::LightSwitchApplication.EditableEngineersGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Engineers_Changed(e);
                }
                private static void _Engineers_OnLoaded(global::LightSwitchApplication.EditableEngineersGrid s, bool succeeded)
                {
                    s.Engineers_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class EditableIssuesGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EditableIssuesGrid() : base("LightSwitchApplication.HelpDeskCS.DesktopClient:EditableIssuesGrid")
        {
            global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EditableIssuesGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EditableIssuesGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Issues_SelectionChanged();

        partial void Issues_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Issues visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> Issues
        {
            get
            {
                return global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties.Issues);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the AddItem screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddItem()
        {
            this.Details.Methods.AddItem.CreateInvocation().Execute();
        }
        partial void AddItem_CanExecute(ref bool result);
        partial void AddItem_Execute();

        /// <summary>
        /// Calls the EditItem screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void EditItem()
        {
            this.Details.Methods.EditItem.CreateInvocation().Execute();
        }
        partial void EditItem_CanExecute(ref bool result);
        partial void EditItem_Execute();

        /// <summary>
        /// Calls the DeleteItem screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void DeleteItem()
        {
            this.Details.Methods.DeleteItem.CreateInvocation().Execute();
        }
        partial void DeleteItem_CanExecute(ref bool result);
        partial void DeleteItem_Execute();

        /// <summary>
        /// Calls the SaveItem screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveItem()
        {
            this.Details.Methods.SaveItem.CreateInvocation().Execute();
        }
        partial void SaveItem_CanExecute(ref bool result);
        partial void SaveItem_Execute();

        /// <summary>
        /// Calls the CancelItem screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelItem()
        {
            this.Details.Methods.CancelItem.CreateInvocation().Execute();
        }
        partial void CancelItem_CanExecute(ref bool result);
        partial void CancelItem_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties.Issues;
                var initializeCommandEntry = global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSetProperties.AddItem;
                var initializeMethodEntry = global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSetProperties.AddItem;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry
                __EditableIssuesGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeCreated,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeActivated,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeSaveErrorEvent);
            private static void __EditableIssuesGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EditableIssuesGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EditableIssuesGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EditableIssuesGrid_InvokeSavingEvent(global::LightSwitchApplication.EditableIssuesGrid s)
            {
                bool handled = false;
                s.EditableIssuesGrid_Saving(ref handled);
                return handled;
            }
            private static void __EditableIssuesGrid_InvokeSavedEvent(global::LightSwitchApplication.EditableIssuesGrid s)
            {
                s.EditableIssuesGrid_Saved();
            }
            private static bool __EditableIssuesGrid_InvokeClosingEvent(global::LightSwitchApplication.EditableIssuesGrid s)
            {
                bool cancel = false;
                s.EditableIssuesGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EditableIssuesGrid_InvokeCreated(global::LightSwitchApplication.EditableIssuesGrid s)
            {
                s.EditableIssuesGrid_Created();
            }
            private static void __EditableIssuesGrid_InvokeActivated(global::LightSwitchApplication.EditableIssuesGrid s)
            {
                s.EditableIssuesGrid_Activated();
            }
            private static bool __EditableIssuesGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EditableIssuesGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EditableIssuesGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IssuesQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            this.Screen.DataWorkspace.ApplicationData.Issues,
                            "IssueStatusCollection"),
                        "Priority"),
                    "Engineer");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issues;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Data _AddItemCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Data _EditItemCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Data _DeleteItemCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Data _SaveItemCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Data _CancelItemCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Data _AddItemMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Data _EditItemMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Data _DeleteItemMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Data _SaveItemMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Data _CancelItemMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue> Issues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties.Issues);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass> AddItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSetProperties.AddItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass> EditItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSetProperties.EditItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass> DeleteItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSetProperties.DeleteItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass> SaveItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSetProperties.SaveItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass> CancelItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSetProperties.CancelItem);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass> AddItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSetProperties.AddItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass> EditItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSetProperties.EditItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass> DeleteItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSetProperties.DeleteItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass> SaveItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSetProperties.SaveItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass> CancelItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSetProperties.CancelItem);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issues",
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_Stub,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_Validate,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_CreateQuery,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_SelectionChanged,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_OnCollectionChanged,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_OnLoaded);
                private static void _Issues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Issues, sf);
                }
                private static void _Issues_Validate(global::LightSwitchApplication.EditableIssuesGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issues_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issues_CreateQuery(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, object[] args)
                {
                    return d.IssuesQuery();
                }
                private static void _Issues_SelectionChanged(global::LightSwitchApplication.EditableIssuesGrid s)
                {
                    s.Issues_SelectionChanged();
                }
                private static void _Issues_OnCollectionChanged(global::LightSwitchApplication.EditableIssuesGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Issues_Changed(e);
                }
                private static void _Issues_OnLoaded(global::LightSwitchApplication.EditableIssuesGrid s, bool succeeded)
                {
                    s.Issues_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry
                    AddItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry(
                        "AddItem",
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSetProperties._AddItem_Stub,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSetProperties._AddItem_CreateExecutableObject);
                private static void _AddItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Data> c, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._AddItemCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddItem_CreateExecutableObject(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EditableIssuesGrid.DetailsClass)d).Methods.AddItem.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry
                    EditItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry(
                        "EditItem",
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSetProperties._EditItem_Stub,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSetProperties._EditItem_CreateExecutableObject);
                private static void _EditItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Data> c, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._EditItemCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _EditItem_CreateExecutableObject(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EditableIssuesGrid.DetailsClass)d).Methods.EditItem.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry
                    DeleteItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry(
                        "DeleteItem",
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSetProperties._DeleteItem_Stub,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSetProperties._DeleteItem_CreateExecutableObject);
                private static void _DeleteItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Data> c, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._DeleteItemCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _DeleteItem_CreateExecutableObject(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EditableIssuesGrid.DetailsClass)d).Methods.DeleteItem.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry
                    SaveItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry(
                        "SaveItem",
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSetProperties._SaveItem_Stub,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSetProperties._SaveItem_CreateExecutableObject);
                private static void _SaveItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Data> c, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveItemCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveItem_CreateExecutableObject(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EditableIssuesGrid.DetailsClass)d).Methods.SaveItem.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry
                    CancelItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry(
                        "CancelItem",
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSetProperties._CancelItem_Stub,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSetProperties._CancelItem_CreateExecutableObject);
                private static void _CancelItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Data> c, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelItemCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelItem_CreateExecutableObject(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EditableIssuesGrid.DetailsClass)d).Methods.CancelItem.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry
                    AddItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry(
                        "AddItem",
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSetProperties._AddItem_Stub,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSetProperties._AddItem_CanInvoke,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSetProperties._AddItem_InvokeMethod);
                private static void _AddItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Data> c, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._AddItemMethod, sf);
                }
                private static global::System.Exception _AddItem_CanInvoke(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddItem_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddItem_InvokeMethod(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddItem_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry
                    EditItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry(
                        "EditItem",
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSetProperties._EditItem_Stub,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSetProperties._EditItem_CanInvoke,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSetProperties._EditItem_InvokeMethod);
                private static void _EditItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Data> c, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._EditItemMethod, sf);
                }
                private static global::System.Exception _EditItem_CanInvoke(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.EditItem_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _EditItem_InvokeMethod(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.EditItem_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry
                    DeleteItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry(
                        "DeleteItem",
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSetProperties._DeleteItem_Stub,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSetProperties._DeleteItem_CanInvoke,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSetProperties._DeleteItem_InvokeMethod);
                private static void _DeleteItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Data> c, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._DeleteItemMethod, sf);
                }
                private static global::System.Exception _DeleteItem_CanInvoke(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.DeleteItem_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _DeleteItem_InvokeMethod(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.DeleteItem_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry
                    SaveItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry(
                        "SaveItem",
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSetProperties._SaveItem_Stub,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSetProperties._SaveItem_CanInvoke,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSetProperties._SaveItem_InvokeMethod);
                private static void _SaveItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Data> c, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveItemMethod, sf);
                }
                private static global::System.Exception _SaveItem_CanInvoke(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveItem_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveItem_InvokeMethod(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveItem_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry
                    CancelItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry(
                        "CancelItem",
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSetProperties._CancelItem_Stub,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSetProperties._CancelItem_CanInvoke,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSetProperties._CancelItem_InvokeMethod);
                private static void _CancelItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Data> c, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelItemMethod, sf);
                }
                private static global::System.Exception _CancelItem_CanInvoke(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelItem_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelItem_InvokeMethod(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelItem_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class EngineerDashboard
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EngineerDashboard(int EngineerId) : base("LightSwitchApplication.HelpDeskCS.DesktopClient:EngineerDashboard")
        {
                this.EngineerId = EngineerId;
            global::LightSwitchApplication.EngineerDashboard.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EngineerDashboard CreateInstance(int EngineerId)
        {
            return new global::LightSwitchApplication.EngineerDashboard(
                        EngineerId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Engineer_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineer_Loaded(bool succeeded);

        partial void EngineerId_Changed();

        partial void IssuesOverdueLabel_Changed();

        partial void IssueSelectionProperty_Changed();

        partial void Top5OldestIssues_SelectionChanged();

        partial void Top5OldestIssues_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Top5OldestIssues_Loaded(bool succeeded);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Engineer Engineer
        {
            get
            {
                return global::LightSwitchApplication.EngineerDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.Engineer);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineer_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EngineerId
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.EngineerId);
            }
            set
            {
                global::LightSwitchApplication.EngineerDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.EngineerId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IssuesOverdueLabel
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.IssuesOverdueLabel);
            }
            set
            {
                global::LightSwitchApplication.EngineerDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.IssuesOverdueLabel, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesOverdueLabel_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Issue IssueSelectionProperty
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.IssueSelectionProperty);
            }
            set
            {
                global::LightSwitchApplication.EngineerDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.IssueSelectionProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueSelectionProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Top5OldestIssues visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> Top5OldestIssues
        {
            get
            {
                return global::LightSwitchApplication.EngineerDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.Top5OldestIssues);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Top5OldestIssues_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the OpenIssue screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenIssue()
        {
            this.Details.Methods.OpenIssue.CreateInvocation().Execute();
        }
        partial void OpenIssue_CanExecute(ref bool result);
        partial void OpenIssue_Execute();

        /// <summary>
        /// Calls the CreateNewIssue screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CreateNewIssue()
        {
            this.Details.Methods.CreateNewIssue.CreateInvocation().Execute();
        }
        partial void CreateNewIssue_CanExecute(ref bool result);
        partial void CreateNewIssue_Execute();

        /// <summary>
        /// Calls the RefreshAllScreens screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RefreshAllScreens()
        {
            this.Details.Methods.RefreshAllScreens.CreateInvocation().Execute();
        }
        partial void RefreshAllScreens_CanExecute(ref bool result);
        partial void RefreshAllScreens_Execute();

        /// <summary>
        /// Calls the ArchiveIssues screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ArchiveIssues()
        {
            this.Details.Methods.ArchiveIssues.CreateInvocation().Execute();
        }
        partial void ArchiveIssues_CanExecute(ref bool result);
        partial void ArchiveIssues_Execute();

        /// <summary>
        /// Calls the OpenNewIssueScreen screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenNewIssueScreen()
        {
            this.Details.Methods.OpenNewIssueScreen.CreateInvocation().Execute();
        }
        partial void OpenNewIssueScreen_CanExecute(ref bool result);
        partial void OpenNewIssueScreen_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySet, global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSet, global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.Engineer;
                var initializeCommandEntry = global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties.OpenIssue;
                var initializeMethodEntry = global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties.OpenIssue;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                __EngineerDashboardEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeSavingEvent,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeSavedEvent,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeClosingEvent,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeCreated,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeActivated,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeSaveErrorEvent);
            private static void __EngineerDashboard_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EngineerDashboard s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EngineerDashboard_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EngineerDashboard_InvokeSavingEvent(global::LightSwitchApplication.EngineerDashboard s)
            {
                bool handled = false;
                s.EngineerDashboard_Saving(ref handled);
                return handled;
            }
            private static void __EngineerDashboard_InvokeSavedEvent(global::LightSwitchApplication.EngineerDashboard s)
            {
                s.EngineerDashboard_Saved();
            }
            private static bool __EngineerDashboard_InvokeClosingEvent(global::LightSwitchApplication.EngineerDashboard s)
            {
                bool cancel = false;
                s.EngineerDashboard_Closing(ref cancel);
                return cancel;
            }
            private static void __EngineerDashboard_InvokeCreated(global::LightSwitchApplication.EngineerDashboard s)
            {
                s.EngineerDashboard_Created();
            }
            private static void __EngineerDashboard_InvokeActivated(global::LightSwitchApplication.EngineerDashboard s)
            {
                s.EngineerDashboard_Activated();
            }
            private static bool __EngineerDashboard_InvokeSaveErrorEvent(global::LightSwitchApplication.EngineerDashboard s, global::System.Exception ex)
            {
                bool handled = false;
                s.EngineerDashboard_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Top5OldestIssuesQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.OrderByDescending(
                    this.Screen.DataWorkspace.ApplicationData.Issues,
                    (i) => i.TargetEndDateTime);
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Engineer;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int>.Data _EngineerId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Data _IssuesOverdueLabel;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Issue>.Data _IssueSelectionProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Issue>.Data _Top5OldestIssues;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _OpenIssueCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _CreateNewIssueCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _RefreshAllScreensCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _ArchiveIssuesCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _OpenNewIssueScreenCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _OpenIssueMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _CreateNewIssueMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _RefreshAllScreensMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _ArchiveIssuesMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _OpenNewIssueScreenMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer> Engineer
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.Engineer);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int> EngineerId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.EngineerId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string> IssuesOverdueLabel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.IssuesOverdueLabel);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Issue> IssueSelectionProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.IssueSelectionProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Issue> Top5OldestIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.Top5OldestIssues);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> OpenIssue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties.OpenIssue);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> CreateNewIssue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties.CreateNewIssue);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> RefreshAllScreens
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties.RefreshAllScreens);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> ArchiveIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties.ArchiveIssues);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> OpenNewIssueScreen
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties.OpenNewIssueScreen);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> OpenIssue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties.OpenIssue);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> CreateNewIssue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties.CreateNewIssue);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> RefreshAllScreens
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties.RefreshAllScreens);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> ArchiveIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties.ArchiveIssues);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> OpenNewIssueScreen
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties.OpenNewIssueScreen);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Engineer = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Engineer",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Engineer_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Engineer_Validate,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Engineer_CreateQuery,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Engineer_OnValueChanged,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Engineer_OnLoaded);
                private static void _Engineer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._Engineer, sf);
                }
                private static void _Engineer_Validate(global::LightSwitchApplication.EngineerDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Engineer_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Engineer_CreateQuery(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Engineer_OnValueChanged(global::LightSwitchApplication.EngineerDashboard s)
                {
                    s.Engineer_Changed();
                }

                private static void _Engineer_OnLoaded(global::LightSwitchApplication.EngineerDashboard s, bool succeeded)
                {
                    s.Engineer_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int>.Entry
                    EngineerId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int>.Entry(
                        "EngineerId",
                        false,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._EngineerId_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._EngineerId_Validate,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._EngineerId_OnValueChanged);
                private static void _EngineerId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._EngineerId, sf);
                }
                private static void _EngineerId_Validate(global::LightSwitchApplication.EngineerDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EngineerId_Validate(r);
                }
                private static void _EngineerId_OnValueChanged(global::LightSwitchApplication.EngineerDashboard s)
                {
                    s.EngineerId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Entry
                    IssuesOverdueLabel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Entry(
                        "IssuesOverdueLabel",
                        false,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._IssuesOverdueLabel_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._IssuesOverdueLabel_Validate,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._IssuesOverdueLabel_OnValueChanged);
                private static void _IssuesOverdueLabel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._IssuesOverdueLabel, sf);
                }
                private static void _IssuesOverdueLabel_Validate(global::LightSwitchApplication.EngineerDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssuesOverdueLabel_Validate(r);
                }
                private static void _IssuesOverdueLabel_OnValueChanged(global::LightSwitchApplication.EngineerDashboard s)
                {
                    s.IssuesOverdueLabel_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    IssueSelectionProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "IssueSelectionProperty",
                        false,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._IssueSelectionProperty_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._IssueSelectionProperty_Validate,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._IssueSelectionProperty_OnValueChanged);
                private static void _IssueSelectionProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueSelectionProperty, sf);
                }
                private static void _IssueSelectionProperty_Validate(global::LightSwitchApplication.EngineerDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueSelectionProperty_Validate(r);
                }
                private static void _IssueSelectionProperty_OnValueChanged(global::LightSwitchApplication.EngineerDashboard s)
                {
                    s.IssueSelectionProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Top5OldestIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Top5OldestIssues",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Top5OldestIssues_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Top5OldestIssues_Validate,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Top5OldestIssues_CreateQuery,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Top5OldestIssues_SelectionChanged,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Top5OldestIssues_OnCollectionChanged,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Top5OldestIssues_OnLoaded);
                private static void _Top5OldestIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._Top5OldestIssues, sf);
                }
                private static void _Top5OldestIssues_Validate(global::LightSwitchApplication.EngineerDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Top5OldestIssues_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Top5OldestIssues_CreateQuery(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object[] args)
                {
                    return d.Top5OldestIssuesQuery();
                }
                private static void _Top5OldestIssues_SelectionChanged(global::LightSwitchApplication.EngineerDashboard s)
                {
                    s.Top5OldestIssues_SelectionChanged();
                }
                private static void _Top5OldestIssues_OnCollectionChanged(global::LightSwitchApplication.EngineerDashboard s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Top5OldestIssues_Changed(e);
                }
                private static void _Top5OldestIssues_OnLoaded(global::LightSwitchApplication.EngineerDashboard s, bool succeeded)
                {
                    s.Top5OldestIssues_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    OpenIssue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "OpenIssue",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._OpenIssue_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._OpenIssue_CreateExecutableObject);
                private static void _OpenIssue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIssueCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenIssue_CreateExecutableObject(global::LightSwitchApplication.EngineerDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDashboard.DetailsClass)d).Methods.OpenIssue.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    CreateNewIssue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "CreateNewIssue",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._CreateNewIssue_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._CreateNewIssue_CreateExecutableObject);
                private static void _CreateNewIssue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._CreateNewIssueCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CreateNewIssue_CreateExecutableObject(global::LightSwitchApplication.EngineerDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDashboard.DetailsClass)d).Methods.CreateNewIssue.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    RefreshAllScreens = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "RefreshAllScreens",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._RefreshAllScreens_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._RefreshAllScreens_CreateExecutableObject);
                private static void _RefreshAllScreens_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._RefreshAllScreensCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _RefreshAllScreens_CreateExecutableObject(global::LightSwitchApplication.EngineerDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDashboard.DetailsClass)d).Methods.RefreshAllScreens.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    ArchiveIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "ArchiveIssues",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._ArchiveIssues_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._ArchiveIssues_CreateExecutableObject);
                private static void _ArchiveIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ArchiveIssuesCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ArchiveIssues_CreateExecutableObject(global::LightSwitchApplication.EngineerDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDashboard.DetailsClass)d).Methods.ArchiveIssues.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    OpenNewIssueScreen = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "OpenNewIssueScreen",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._OpenNewIssueScreen_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._OpenNewIssueScreen_CreateExecutableObject);
                private static void _OpenNewIssueScreen_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenNewIssueScreenCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenNewIssueScreen_CreateExecutableObject(global::LightSwitchApplication.EngineerDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDashboard.DetailsClass)d).Methods.OpenNewIssueScreen.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    OpenIssue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "OpenIssue",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenIssue_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenIssue_CanInvoke,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenIssue_InvokeMethod);
                private static void _OpenIssue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIssueMethod, sf);
                }
                private static global::System.Exception _OpenIssue_CanInvoke(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenIssue_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenIssue_InvokeMethod(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenIssue_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    CreateNewIssue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "CreateNewIssue",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._CreateNewIssue_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._CreateNewIssue_CanInvoke,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._CreateNewIssue_InvokeMethod);
                private static void _CreateNewIssue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._CreateNewIssueMethod, sf);
                }
                private static global::System.Exception _CreateNewIssue_CanInvoke(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CreateNewIssue_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CreateNewIssue_InvokeMethod(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CreateNewIssue_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    RefreshAllScreens = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "RefreshAllScreens",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._RefreshAllScreens_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._RefreshAllScreens_CanInvoke,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._RefreshAllScreens_InvokeMethod);
                private static void _RefreshAllScreens_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._RefreshAllScreensMethod, sf);
                }
                private static global::System.Exception _RefreshAllScreens_CanInvoke(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.RefreshAllScreens_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _RefreshAllScreens_InvokeMethod(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.RefreshAllScreens_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    ArchiveIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "ArchiveIssues",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._ArchiveIssues_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._ArchiveIssues_CanInvoke,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._ArchiveIssues_InvokeMethod);
                private static void _ArchiveIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ArchiveIssuesMethod, sf);
                }
                private static global::System.Exception _ArchiveIssues_CanInvoke(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ArchiveIssues_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ArchiveIssues_InvokeMethod(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ArchiveIssues_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    OpenNewIssueScreen = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "OpenNewIssueScreen",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenNewIssueScreen_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenNewIssueScreen_CanInvoke,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenNewIssueScreen_InvokeMethod);
                private static void _OpenNewIssueScreen_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenNewIssueScreenMethod, sf);
                }
                private static global::System.Exception _OpenNewIssueScreen_CanInvoke(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenNewIssueScreen_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenNewIssueScreen_InvokeMethod(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenNewIssueScreen_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class EngineerDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EngineerDetail(int EngineerId) : base("LightSwitchApplication.HelpDeskCS.DesktopClient:EngineerDetail")
        {
                this.EngineerId = EngineerId;
            global::LightSwitchApplication.EngineerDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EngineerDetail CreateInstance(int EngineerId)
        {
            return new global::LightSwitchApplication.EngineerDetail(
                        EngineerId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Engineer_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineer_Loaded(bool succeeded);

        partial void EngineerId_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Engineer Engineer
        {
            get
            {
                return global::LightSwitchApplication.EngineerDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.Engineer);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineer_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EngineerId
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.EngineerId);
            }
            set
            {
                global::LightSwitchApplication.EngineerDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.EngineerId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySet, global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSet, global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.Engineer;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry
                __EngineerDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.EngineerDetail.DetailsClass.__EngineerDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EngineerDetail.DetailsClass.__EngineerDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.EngineerDetail.DetailsClass.__EngineerDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.EngineerDetail.DetailsClass.__EngineerDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.EngineerDetail.DetailsClass.__EngineerDetail_InvokeCreated,
                    global::LightSwitchApplication.EngineerDetail.DetailsClass.__EngineerDetail_InvokeActivated,
                    global::LightSwitchApplication.EngineerDetail.DetailsClass.__EngineerDetail_InvokeSaveErrorEvent);
            private static void __EngineerDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EngineerDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EngineerDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EngineerDetail_InvokeSavingEvent(global::LightSwitchApplication.EngineerDetail s)
            {
                bool handled = false;
                s.EngineerDetail_Saving(ref handled);
                return handled;
            }
            private static void __EngineerDetail_InvokeSavedEvent(global::LightSwitchApplication.EngineerDetail s)
            {
                s.EngineerDetail_Saved();
            }
            private static bool __EngineerDetail_InvokeClosingEvent(global::LightSwitchApplication.EngineerDetail s)
            {
                bool cancel = false;
                s.EngineerDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __EngineerDetail_InvokeCreated(global::LightSwitchApplication.EngineerDetail s)
            {
                s.EngineerDetail_Created();
            }
            private static void __EngineerDetail_InvokeActivated(global::LightSwitchApplication.EngineerDetail s)
            {
                s.EngineerDetail_Activated();
            }
            private static bool __EngineerDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.EngineerDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.EngineerDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Engineer;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, int>.Data _EngineerId;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer> Engineer
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.Engineer);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, int> EngineerId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.EngineerId);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Engineer = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Engineer",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Engineer_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Engineer_Validate,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Engineer_CreateQuery,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Engineer_OnValueChanged,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Engineer_OnLoaded);
                private static void _Engineer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Engineer, sf);
                }
                private static void _Engineer_Validate(global::LightSwitchApplication.EngineerDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Engineer_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Engineer_CreateQuery(global::LightSwitchApplication.EngineerDetail.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Engineer_OnValueChanged(global::LightSwitchApplication.EngineerDetail s)
                {
                    s.Engineer_Changed();
                }

                private static void _Engineer_OnLoaded(global::LightSwitchApplication.EngineerDetail s, bool succeeded)
                {
                    s.Engineer_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, int>.Entry
                    EngineerId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, int>.Entry(
                        "EngineerId",
                        false,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._EngineerId_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._EngineerId_Validate,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._EngineerId_OnValueChanged);
                private static void _EngineerId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._EngineerId, sf);
                }
                private static void _EngineerId_Validate(global::LightSwitchApplication.EngineerDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EngineerId_Validate(r);
                }
                private static void _EngineerId_OnValueChanged(global::LightSwitchApplication.EngineerDetail s)
                {
                    s.EngineerId_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class EngineerManagerGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EngineerManagerGrid() : base("LightSwitchApplication.HelpDeskCS.DesktopClient:EngineerManagerGrid")
        {
            global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EngineerManagerGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EngineerManagerGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerManagerGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerManagerGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerManagerGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerManagerGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerManagerGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerManagerGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerManagerGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Engineers_SelectionChanged();

        partial void Engineers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Engineers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Engineer> Engineers
        {
            get
            {
                return global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.PropertySetProperties.Engineers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the OpenDashboard screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenDashboard()
        {
            this.Details.Methods.OpenDashboard.CreateInvocation().Execute();
        }
        partial void OpenDashboard_CanExecute(ref bool result);
        partial void OpenDashboard_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.PropertySetProperties.Engineers;
                var initializeCommandEntry = global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.CommandSetProperties.OpenDashboard;
                var initializeMethodEntry = global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.MethodSetProperties.OpenDashboard;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass>.Entry
                __EngineerManagerGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.__EngineerManagerGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.__EngineerManagerGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.__EngineerManagerGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.__EngineerManagerGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.__EngineerManagerGrid_InvokeCreated,
                    global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.__EngineerManagerGrid_InvokeActivated,
                    global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.__EngineerManagerGrid_InvokeSaveErrorEvent);
            private static void __EngineerManagerGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EngineerManagerGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EngineerManagerGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EngineerManagerGrid_InvokeSavingEvent(global::LightSwitchApplication.EngineerManagerGrid s)
            {
                bool handled = false;
                s.EngineerManagerGrid_Saving(ref handled);
                return handled;
            }
            private static void __EngineerManagerGrid_InvokeSavedEvent(global::LightSwitchApplication.EngineerManagerGrid s)
            {
                s.EngineerManagerGrid_Saved();
            }
            private static bool __EngineerManagerGrid_InvokeClosingEvent(global::LightSwitchApplication.EngineerManagerGrid s)
            {
                bool cancel = false;
                s.EngineerManagerGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EngineerManagerGrid_InvokeCreated(global::LightSwitchApplication.EngineerManagerGrid s)
            {
                s.EngineerManagerGrid_Created();
            }
            private static void __EngineerManagerGrid_InvokeActivated(global::LightSwitchApplication.EngineerManagerGrid s)
            {
                s.EngineerManagerGrid_Activated();
            }
            private static bool __EngineerManagerGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EngineerManagerGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EngineerManagerGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EngineersQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Engineers;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Engineers;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass>.Data _OpenDashboardCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass>.Data _OpenDashboardMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer> Engineers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.PropertySetProperties.Engineers);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass> OpenDashboard
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.CommandSetProperties.OpenDashboard);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass> OpenDashboard
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.MethodSetProperties.OpenDashboard);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Engineers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Engineers",
                        global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.PropertySetProperties._Engineers_Stub,
                        global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.PropertySetProperties._Engineers_Validate,
                        global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.PropertySetProperties._Engineers_CreateQuery,
                        global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.PropertySetProperties._Engineers_SelectionChanged,
                        global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.PropertySetProperties._Engineers_OnCollectionChanged,
                        global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.PropertySetProperties._Engineers_OnLoaded);
                private static void _Engineers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Engineers, sf);
                }
                private static void _Engineers_Validate(global::LightSwitchApplication.EngineerManagerGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Engineers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Engineers_CreateQuery(global::LightSwitchApplication.EngineerManagerGrid.DetailsClass d, object[] args)
                {
                    return d.EngineersQuery();
                }
                private static void _Engineers_SelectionChanged(global::LightSwitchApplication.EngineerManagerGrid s)
                {
                    s.Engineers_SelectionChanged();
                }
                private static void _Engineers_OnCollectionChanged(global::LightSwitchApplication.EngineerManagerGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Engineers_Changed(e);
                }
                private static void _Engineers_OnLoaded(global::LightSwitchApplication.EngineerManagerGrid s, bool succeeded)
                {
                    s.Engineers_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass>.Entry
                    OpenDashboard = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass>.Entry(
                        "OpenDashboard",
                        global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.CommandSetProperties._OpenDashboard_Stub,
                        global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.CommandSetProperties._OpenDashboard_CreateExecutableObject);
                private static void _OpenDashboard_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenDashboardCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenDashboard_CreateExecutableObject(global::LightSwitchApplication.EngineerManagerGrid.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerManagerGrid.DetailsClass)d).Methods.OpenDashboard.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass>.Entry
                    OpenDashboard = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass>.Entry(
                        "OpenDashboard",
                        global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.MethodSetProperties._OpenDashboard_Stub,
                        global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.MethodSetProperties._OpenDashboard_CanInvoke,
                        global::LightSwitchApplication.EngineerManagerGrid.DetailsClass.MethodSetProperties._OpenDashboard_InvokeMethod);
                private static void _OpenDashboard_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerManagerGrid, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenDashboardMethod, sf);
                }
                private static global::System.Exception _OpenDashboard_CanInvoke(global::LightSwitchApplication.EngineerManagerGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenDashboard_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenDashboard_InvokeMethod(global::LightSwitchApplication.EngineerManagerGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenDashboard_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class EngineersListDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EngineersListDetail, global::LightSwitchApplication.EngineersListDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EngineersListDetail() : base("LightSwitchApplication.HelpDeskCS.DesktopClient:EngineersListDetail")
        {
            global::LightSwitchApplication.EngineersListDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EngineersListDetail CreateInstance()
        {
            return new global::LightSwitchApplication.EngineersListDetail(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersListDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersListDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersListDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersListDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersListDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersListDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersListDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Engineers_SelectionChanged();

        partial void Engineers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Engineers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Engineer> Engineers
        {
            get
            {
                return global::LightSwitchApplication.EngineersListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineersListDetail.DetailsClass.PropertySetProperties.Engineers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineersListDetail, global::LightSwitchApplication.EngineersListDetail.DetailsClass, global::LightSwitchApplication.EngineersListDetail.DetailsClass.PropertySet, global::LightSwitchApplication.EngineersListDetail.DetailsClass.CommandSet, global::LightSwitchApplication.EngineersListDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EngineersListDetail.DetailsClass.PropertySetProperties.Engineers;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineersListDetail, global::LightSwitchApplication.EngineersListDetail.DetailsClass>.Entry
                __EngineersListDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineersListDetail, global::LightSwitchApplication.EngineersListDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.EngineersListDetail.DetailsClass.__EngineersListDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EngineersListDetail.DetailsClass.__EngineersListDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.EngineersListDetail.DetailsClass.__EngineersListDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.EngineersListDetail.DetailsClass.__EngineersListDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.EngineersListDetail.DetailsClass.__EngineersListDetail_InvokeCreated,
                    global::LightSwitchApplication.EngineersListDetail.DetailsClass.__EngineersListDetail_InvokeActivated,
                    global::LightSwitchApplication.EngineersListDetail.DetailsClass.__EngineersListDetail_InvokeSaveErrorEvent);
            private static void __EngineersListDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EngineersListDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EngineersListDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EngineersListDetail_InvokeSavingEvent(global::LightSwitchApplication.EngineersListDetail s)
            {
                bool handled = false;
                s.EngineersListDetail_Saving(ref handled);
                return handled;
            }
            private static void __EngineersListDetail_InvokeSavedEvent(global::LightSwitchApplication.EngineersListDetail s)
            {
                s.EngineersListDetail_Saved();
            }
            private static bool __EngineersListDetail_InvokeClosingEvent(global::LightSwitchApplication.EngineersListDetail s)
            {
                bool cancel = false;
                s.EngineersListDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __EngineersListDetail_InvokeCreated(global::LightSwitchApplication.EngineersListDetail s)
            {
                s.EngineersListDetail_Created();
            }
            private static void __EngineersListDetail_InvokeActivated(global::LightSwitchApplication.EngineersListDetail s)
            {
                s.EngineersListDetail_Activated();
            }
            private static bool __EngineersListDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.EngineersListDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.EngineersListDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EngineersListDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EngineersListDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EngineersListDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EngineersQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.ApplicationData.Engineers,
                    "Manager");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersListDetail, global::LightSwitchApplication.EngineersListDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Engineers;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EngineersListDetail, global::LightSwitchApplication.EngineersListDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersListDetail, global::LightSwitchApplication.EngineersListDetail.DetailsClass, global::LightSwitchApplication.Engineer> Engineers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersListDetail, global::LightSwitchApplication.EngineersListDetail.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EngineersListDetail.DetailsClass.PropertySetProperties.Engineers);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EngineersListDetail, global::LightSwitchApplication.EngineersListDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EngineersListDetail, global::LightSwitchApplication.EngineersListDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersListDetail, global::LightSwitchApplication.EngineersListDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Engineers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersListDetail, global::LightSwitchApplication.EngineersListDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Engineers",
                        global::LightSwitchApplication.EngineersListDetail.DetailsClass.PropertySetProperties._Engineers_Stub,
                        global::LightSwitchApplication.EngineersListDetail.DetailsClass.PropertySetProperties._Engineers_Validate,
                        global::LightSwitchApplication.EngineersListDetail.DetailsClass.PropertySetProperties._Engineers_CreateQuery,
                        global::LightSwitchApplication.EngineersListDetail.DetailsClass.PropertySetProperties._Engineers_SelectionChanged,
                        global::LightSwitchApplication.EngineersListDetail.DetailsClass.PropertySetProperties._Engineers_OnCollectionChanged,
                        global::LightSwitchApplication.EngineersListDetail.DetailsClass.PropertySetProperties._Engineers_OnLoaded);
                private static void _Engineers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersListDetail, global::LightSwitchApplication.EngineersListDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EngineersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Engineers, sf);
                }
                private static void _Engineers_Validate(global::LightSwitchApplication.EngineersListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Engineers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Engineers_CreateQuery(global::LightSwitchApplication.EngineersListDetail.DetailsClass d, object[] args)
                {
                    return d.EngineersQuery();
                }
                private static void _Engineers_SelectionChanged(global::LightSwitchApplication.EngineersListDetail s)
                {
                    s.Engineers_SelectionChanged();
                }
                private static void _Engineers_OnCollectionChanged(global::LightSwitchApplication.EngineersListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Engineers_Changed(e);
                }
                private static void _Engineers_OnLoaded(global::LightSwitchApplication.EngineersListDetail s, bool succeeded)
                {
                    s.Engineers_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class IssueDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private IssueDetail(int IssueId) : base("LightSwitchApplication.HelpDeskCS.DesktopClient:IssueDetail")
        {
                this.IssueId = IssueId;
            global::LightSwitchApplication.IssueDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static IssueDetail CreateInstance(int IssueId)
        {
            return new global::LightSwitchApplication.IssueDetail(
                        IssueId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Issue_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Loaded(bool succeeded);

        partial void IssueId_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Issue Issue
        {
            get
            {
                return global::LightSwitchApplication.IssueDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.Issue);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int IssueId
        {
            get 
            {
                return global::LightSwitchApplication.IssueDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.IssueId);
            }
            set
            {
                global::LightSwitchApplication.IssueDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.IssueId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the ToggleVisibility screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ToggleVisibility()
        {
            this.Details.Methods.ToggleVisibility.CreateInvocation().Execute();
        }
        partial void ToggleVisibility_CanExecute(ref bool result);
        partial void ToggleVisibility_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySet, global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSet, global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.Issue;
                var initializeCommandEntry = global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties.ToggleVisibility;
                var initializeMethodEntry = global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties.ToggleVisibility;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry
                __IssueDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeCreated,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeActivated,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeSaveErrorEvent);
            private static void __IssueDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.IssueDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.IssueDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __IssueDetail_InvokeSavingEvent(global::LightSwitchApplication.IssueDetail s)
            {
                bool handled = false;
                s.IssueDetail_Saving(ref handled);
                return handled;
            }
            private static void __IssueDetail_InvokeSavedEvent(global::LightSwitchApplication.IssueDetail s)
            {
                s.IssueDetail_Saved();
            }
            private static bool __IssueDetail_InvokeClosingEvent(global::LightSwitchApplication.IssueDetail s)
            {
                bool cancel = false;
                s.IssueDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __IssueDetail_InvokeCreated(global::LightSwitchApplication.IssueDetail s)
            {
                s.IssueDetail_Created();
            }
            private static void __IssueDetail_InvokeActivated(global::LightSwitchApplication.IssueDetail s)
            {
                s.IssueDetail_Activated();
            }
            private static bool __IssueDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.IssueDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.IssueDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issue;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int>.Data _IssueId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data _ToggleVisibilityCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data _ToggleVisibilityMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue> Issue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.Issue);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int> IssueId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.IssueId);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass> ToggleVisibility
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties.ToggleVisibility);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass> ToggleVisibility
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties.ToggleVisibility);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issue",
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._Issue_Stub,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._Issue_Validate,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._Issue_CreateQuery,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._Issue_OnValueChanged,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._Issue_OnLoaded);
                private static void _Issue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.IssueDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Issue, sf);
                }
                private static void _Issue_Validate(global::LightSwitchApplication.IssueDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issue_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issue_CreateQuery(global::LightSwitchApplication.IssueDetail.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Issue_OnValueChanged(global::LightSwitchApplication.IssueDetail s)
                {
                    s.Issue_Changed();
                }

                private static void _Issue_OnLoaded(global::LightSwitchApplication.IssueDetail s, bool succeeded)
                {
                    s.Issue_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int>.Entry
                    IssueId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int>.Entry(
                        "IssueId",
                        false,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._IssueId_Stub,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._IssueId_Validate,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._IssueId_OnValueChanged);
                private static void _IssueId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.IssueDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueId, sf);
                }
                private static void _IssueId_Validate(global::LightSwitchApplication.IssueDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueId_Validate(r);
                }
                private static void _IssueId_OnValueChanged(global::LightSwitchApplication.IssueDetail s)
                {
                    s.IssueId_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry
                    ToggleVisibility = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry(
                        "ToggleVisibility",
                        global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties._ToggleVisibility_Stub,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties._ToggleVisibility_CreateExecutableObject);
                private static void _ToggleVisibility_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data> c, global::LightSwitchApplication.IssueDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleVisibilityCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ToggleVisibility_CreateExecutableObject(global::LightSwitchApplication.IssueDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueDetail.DetailsClass)d).Methods.ToggleVisibility.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry
                    ToggleVisibility = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry(
                        "ToggleVisibility",
                        global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties._ToggleVisibility_Stub,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties._ToggleVisibility_CanInvoke,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties._ToggleVisibility_InvokeMethod);
                private static void _ToggleVisibility_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data> c, global::LightSwitchApplication.IssueDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleVisibilityMethod, sf);
                }
                private static global::System.Exception _ToggleVisibility_CanInvoke(global::LightSwitchApplication.IssueDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ToggleVisibility_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ToggleVisibility_InvokeMethod(global::LightSwitchApplication.IssueDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ToggleVisibility_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class IssuesListDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.IssuesListDetail, global::LightSwitchApplication.IssuesListDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private IssuesListDetail() : base("LightSwitchApplication.HelpDeskCS.DesktopClient:IssuesListDetail")
        {
            global::LightSwitchApplication.IssuesListDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static IssuesListDetail CreateInstance()
        {
            return new global::LightSwitchApplication.IssuesListDetail(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesListDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesListDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesListDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesListDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesListDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesListDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesListDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Issues_SelectionChanged();

        partial void Issues_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Issues visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> Issues
        {
            get
            {
                return global::LightSwitchApplication.IssuesListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.IssuesListDetail.DetailsClass.PropertySetProperties.Issues);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssuesListDetail, global::LightSwitchApplication.IssuesListDetail.DetailsClass, global::LightSwitchApplication.IssuesListDetail.DetailsClass.PropertySet, global::LightSwitchApplication.IssuesListDetail.DetailsClass.CommandSet, global::LightSwitchApplication.IssuesListDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.IssuesListDetail.DetailsClass.PropertySetProperties.Issues;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssuesListDetail, global::LightSwitchApplication.IssuesListDetail.DetailsClass>.Entry
                __IssuesListDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssuesListDetail, global::LightSwitchApplication.IssuesListDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.IssuesListDetail.DetailsClass.__IssuesListDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.IssuesListDetail.DetailsClass.__IssuesListDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.IssuesListDetail.DetailsClass.__IssuesListDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.IssuesListDetail.DetailsClass.__IssuesListDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.IssuesListDetail.DetailsClass.__IssuesListDetail_InvokeCreated,
                    global::LightSwitchApplication.IssuesListDetail.DetailsClass.__IssuesListDetail_InvokeActivated,
                    global::LightSwitchApplication.IssuesListDetail.DetailsClass.__IssuesListDetail_InvokeSaveErrorEvent);
            private static void __IssuesListDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.IssuesListDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.IssuesListDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __IssuesListDetail_InvokeSavingEvent(global::LightSwitchApplication.IssuesListDetail s)
            {
                bool handled = false;
                s.IssuesListDetail_Saving(ref handled);
                return handled;
            }
            private static void __IssuesListDetail_InvokeSavedEvent(global::LightSwitchApplication.IssuesListDetail s)
            {
                s.IssuesListDetail_Saved();
            }
            private static bool __IssuesListDetail_InvokeClosingEvent(global::LightSwitchApplication.IssuesListDetail s)
            {
                bool cancel = false;
                s.IssuesListDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __IssuesListDetail_InvokeCreated(global::LightSwitchApplication.IssuesListDetail s)
            {
                s.IssuesListDetail_Created();
            }
            private static void __IssuesListDetail_InvokeActivated(global::LightSwitchApplication.IssuesListDetail s)
            {
                s.IssuesListDetail_Activated();
            }
            private static bool __IssuesListDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.IssuesListDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.IssuesListDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.IssuesListDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.IssuesListDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.IssuesListDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IssuesQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            this.Screen.DataWorkspace.ApplicationData.Issues,
                            "IssueStatusCollection"),
                        "Priority"),
                    "Engineer");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssuesListDetail, global::LightSwitchApplication.IssuesListDetail.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issues;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.IssuesListDetail, global::LightSwitchApplication.IssuesListDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssuesListDetail, global::LightSwitchApplication.IssuesListDetail.DetailsClass, global::LightSwitchApplication.Issue> Issues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssuesListDetail, global::LightSwitchApplication.IssuesListDetail.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.IssuesListDetail.DetailsClass.PropertySetProperties.Issues);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.IssuesListDetail, global::LightSwitchApplication.IssuesListDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.IssuesListDetail, global::LightSwitchApplication.IssuesListDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssuesListDetail, global::LightSwitchApplication.IssuesListDetail.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssuesListDetail, global::LightSwitchApplication.IssuesListDetail.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issues",
                        global::LightSwitchApplication.IssuesListDetail.DetailsClass.PropertySetProperties._Issues_Stub,
                        global::LightSwitchApplication.IssuesListDetail.DetailsClass.PropertySetProperties._Issues_Validate,
                        global::LightSwitchApplication.IssuesListDetail.DetailsClass.PropertySetProperties._Issues_CreateQuery,
                        global::LightSwitchApplication.IssuesListDetail.DetailsClass.PropertySetProperties._Issues_SelectionChanged,
                        global::LightSwitchApplication.IssuesListDetail.DetailsClass.PropertySetProperties._Issues_OnCollectionChanged,
                        global::LightSwitchApplication.IssuesListDetail.DetailsClass.PropertySetProperties._Issues_OnLoaded);
                private static void _Issues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssuesListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssuesListDetail, global::LightSwitchApplication.IssuesListDetail.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.IssuesListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Issues, sf);
                }
                private static void _Issues_Validate(global::LightSwitchApplication.IssuesListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issues_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issues_CreateQuery(global::LightSwitchApplication.IssuesListDetail.DetailsClass d, object[] args)
                {
                    return d.IssuesQuery();
                }
                private static void _Issues_SelectionChanged(global::LightSwitchApplication.IssuesListDetail s)
                {
                    s.Issues_SelectionChanged();
                }
                private static void _Issues_OnCollectionChanged(global::LightSwitchApplication.IssuesListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Issues_Changed(e);
                }
                private static void _Issues_OnLoaded(global::LightSwitchApplication.IssuesListDetail s, bool succeeded)
                {
                    s.Issues_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class PrioritiesListDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.PrioritiesListDetail, global::LightSwitchApplication.PrioritiesListDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private PrioritiesListDetail() : base("LightSwitchApplication.HelpDeskCS.DesktopClient:PrioritiesListDetail")
        {
            global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static PrioritiesListDetail CreateInstance()
        {
            return new global::LightSwitchApplication.PrioritiesListDetail(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrioritiesListDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrioritiesListDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrioritiesListDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrioritiesListDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrioritiesListDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrioritiesListDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrioritiesListDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Priorities_SelectionChanged();

        partial void Priorities_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priorities_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Priorities visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Priority> Priorities
        {
            get
            {
                return global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.PropertySetProperties.Priorities);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priorities_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.PrioritiesListDetail, global::LightSwitchApplication.PrioritiesListDetail.DetailsClass, global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.PropertySet, global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.CommandSet, global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.PropertySetProperties.Priorities;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.PrioritiesListDetail, global::LightSwitchApplication.PrioritiesListDetail.DetailsClass>.Entry
                __PrioritiesListDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.PrioritiesListDetail, global::LightSwitchApplication.PrioritiesListDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.__PrioritiesListDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.__PrioritiesListDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.__PrioritiesListDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.__PrioritiesListDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.__PrioritiesListDetail_InvokeCreated,
                    global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.__PrioritiesListDetail_InvokeActivated,
                    global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.__PrioritiesListDetail_InvokeSaveErrorEvent);
            private static void __PrioritiesListDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.PrioritiesListDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.PrioritiesListDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __PrioritiesListDetail_InvokeSavingEvent(global::LightSwitchApplication.PrioritiesListDetail s)
            {
                bool handled = false;
                s.PrioritiesListDetail_Saving(ref handled);
                return handled;
            }
            private static void __PrioritiesListDetail_InvokeSavedEvent(global::LightSwitchApplication.PrioritiesListDetail s)
            {
                s.PrioritiesListDetail_Saved();
            }
            private static bool __PrioritiesListDetail_InvokeClosingEvent(global::LightSwitchApplication.PrioritiesListDetail s)
            {
                bool cancel = false;
                s.PrioritiesListDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __PrioritiesListDetail_InvokeCreated(global::LightSwitchApplication.PrioritiesListDetail s)
            {
                s.PrioritiesListDetail_Created();
            }
            private static void __PrioritiesListDetail_InvokeActivated(global::LightSwitchApplication.PrioritiesListDetail s)
            {
                s.PrioritiesListDetail_Activated();
            }
            private static bool __PrioritiesListDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.PrioritiesListDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.PrioritiesListDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable PrioritiesQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Priorities;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PrioritiesListDetail, global::LightSwitchApplication.PrioritiesListDetail.DetailsClass, global::LightSwitchApplication.Priority>.Data _Priorities;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.PrioritiesListDetail, global::LightSwitchApplication.PrioritiesListDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PrioritiesListDetail, global::LightSwitchApplication.PrioritiesListDetail.DetailsClass, global::LightSwitchApplication.Priority> Priorities
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PrioritiesListDetail, global::LightSwitchApplication.PrioritiesListDetail.DetailsClass, global::LightSwitchApplication.Priority>)base.GetItem(global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.PropertySetProperties.Priorities);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.PrioritiesListDetail, global::LightSwitchApplication.PrioritiesListDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.PrioritiesListDetail, global::LightSwitchApplication.PrioritiesListDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PrioritiesListDetail, global::LightSwitchApplication.PrioritiesListDetail.DetailsClass, global::LightSwitchApplication.Priority>.Entry
                    Priorities = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PrioritiesListDetail, global::LightSwitchApplication.PrioritiesListDetail.DetailsClass, global::LightSwitchApplication.Priority>.Entry(
                        "Priorities",
                        global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.PropertySetProperties._Priorities_Stub,
                        global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.PropertySetProperties._Priorities_Validate,
                        global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.PropertySetProperties._Priorities_CreateQuery,
                        global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.PropertySetProperties._Priorities_SelectionChanged,
                        global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.PropertySetProperties._Priorities_OnCollectionChanged,
                        global::LightSwitchApplication.PrioritiesListDetail.DetailsClass.PropertySetProperties._Priorities_OnLoaded);
                private static void _Priorities_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PrioritiesListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PrioritiesListDetail, global::LightSwitchApplication.PrioritiesListDetail.DetailsClass, global::LightSwitchApplication.Priority>.Data> c, global::LightSwitchApplication.PrioritiesListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Priorities, sf);
                }
                private static void _Priorities_Validate(global::LightSwitchApplication.PrioritiesListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Priorities_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Priorities_CreateQuery(global::LightSwitchApplication.PrioritiesListDetail.DetailsClass d, object[] args)
                {
                    return d.PrioritiesQuery();
                }
                private static void _Priorities_SelectionChanged(global::LightSwitchApplication.PrioritiesListDetail s)
                {
                    s.Priorities_SelectionChanged();
                }
                private static void _Priorities_OnCollectionChanged(global::LightSwitchApplication.PrioritiesListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Priorities_Changed(e);
                }
                private static void _Priorities_OnLoaded(global::LightSwitchApplication.PrioritiesListDetail s, bool succeeded)
                {
                    s.Priorities_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class Startup
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.Startup, global::LightSwitchApplication.Startup.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private Startup() : base("LightSwitchApplication.HelpDeskCS.DesktopClient:Startup")
        {
            global::LightSwitchApplication.Startup.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static Startup CreateInstance()
        {
            return new global::LightSwitchApplication.Startup(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Startup_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Startup_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Startup_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Startup_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Startup_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Startup_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Startup_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Startup, global::LightSwitchApplication.Startup.DetailsClass, global::LightSwitchApplication.Startup.DetailsClass.PropertySet, global::LightSwitchApplication.Startup.DetailsClass.CommandSet, global::LightSwitchApplication.Startup.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Startup, global::LightSwitchApplication.Startup.DetailsClass>.Entry
                __StartupEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Startup, global::LightSwitchApplication.Startup.DetailsClass>.Entry(
                    global::LightSwitchApplication.Startup.DetailsClass.__Startup_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.Startup.DetailsClass.__Startup_InvokeSavingEvent,
                    global::LightSwitchApplication.Startup.DetailsClass.__Startup_InvokeSavedEvent,
                    global::LightSwitchApplication.Startup.DetailsClass.__Startup_InvokeClosingEvent,
                    global::LightSwitchApplication.Startup.DetailsClass.__Startup_InvokeCreated,
                    global::LightSwitchApplication.Startup.DetailsClass.__Startup_InvokeActivated,
                    global::LightSwitchApplication.Startup.DetailsClass.__Startup_InvokeSaveErrorEvent);
            private static void __Startup_InvokeInitializeDataWorkspace(global::LightSwitchApplication.Startup s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.Startup_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __Startup_InvokeSavingEvent(global::LightSwitchApplication.Startup s)
            {
                bool handled = false;
                s.Startup_Saving(ref handled);
                return handled;
            }
            private static void __Startup_InvokeSavedEvent(global::LightSwitchApplication.Startup s)
            {
                s.Startup_Saved();
            }
            private static bool __Startup_InvokeClosingEvent(global::LightSwitchApplication.Startup s)
            {
                bool cancel = false;
                s.Startup_Closing(ref cancel);
                return cancel;
            }
            private static void __Startup_InvokeCreated(global::LightSwitchApplication.Startup s)
            {
                s.Startup_Created();
            }
            private static void __Startup_InvokeActivated(global::LightSwitchApplication.Startup s)
            {
                s.Startup_Activated();
            }
            private static bool __Startup_InvokeSaveErrorEvent(global::LightSwitchApplication.Startup s, global::System.Exception ex)
            {
                bool handled = false;
                s.Startup_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.Startup.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.Startup.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.Startup.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.Startup, global::LightSwitchApplication.Startup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.Startup, global::LightSwitchApplication.Startup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.Startup, global::LightSwitchApplication.Startup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
}
